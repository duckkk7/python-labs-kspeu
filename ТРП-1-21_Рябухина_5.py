
#1
# 1. Дано целое число N (> 0). Найти квадрат данного числа, используя
# для его вычисления следующую формулу: N2 = 1 + 3 + 5 + … + (2·N
# – 1). После добавления к сумме каждого слагаемого выводить
# текущее значение суммы (в результате будут выведены квадраты
# всех целых чисел от 1 до N).
n = int(input("Введите N: "))
s = 0
for i in range(1, 2*n, 2):
    s += i
    print('s =', s, end='\t')


#2
# 2. Дано целое число N (> 0). Найти значение выражения 1.1 – 1.2 + 1.3
# – … (N слагаемых, знаки чередуются). Условный оператор не
# использовать.
n = int(input("Введите N: "))
s = 1.1
tmp = -1.2
leonardo_da_vinci = 1
for i in range(0, n):
    s = s + tmp
    tmp = (abs(tmp) + 0.1) * leonardo_da_vinci
    leonardo_da_vinci *= -1
print(s)


#3
# 3. Дано вещественное число A и целое число N (> 0). Используя один
# цикл, найти сумму 1 + A + A^2 + A^3 + … + A^N
a = float(input("Введите A: "))
n = int(input("Введите N: "))
s = 0
for i in range(0, n+1):
    s += a**i
print(s)


#4
# 4. Дано целое число N (> 0). Найти произведение N! = 1·2·…·N (N – факториал).
n = int(input("Введите N: "))
s = 1
for i in range(1, n + 1):
    s = s * i
print(s)


#5
# 5. Найти приблизительное значения числа e с помощью формулы e=1+1/1!+1/2!+1/3!+…
s = 1
e = 1
for i in range(1, 100):
    s *= i
    e += 1/s
print(e)


#6
# 6. Дано вещественное число X и целое число N (> 0). Найти значение выражения 1 + X + X^2 /(2!) + … + X^N /(N!) (N! = 1·2·…·N).
# Полученное число является приближенным значением функции exp в точке X.
x = float(input("Введите X: "))
n = int(input("Введите N: "))
fact = 1
s = 1
for i in range(1, n+1):
    fact *= i
    s += x**i/fact
print(s)


#7
# 7. Дано целое число N (> 1). Последовательность вещественных чисел AK определяется следующим образом: A1 = 1, A2 = 2, AK = (AK–2 + 2·AK–1)/3, K = 3, 4, … . Вывести элементы A1, A2, …, AN.
n = int(input("Введите N: "))
s = 0
a1 = 1
a2 = 2
print(a1); print(a2)
for i in range(3, n+1):
    s = (a1 + 2*a2) / 3
    print(s)
    a1 = a2
    a2 = s


#8
# 8. Дано целое число N (> 2). Последовательность целых чисел AK определяется следующим образом: A1 = 1, A2 = 2, A3 = 3, AK = AK–1 + AK–2 – 2·AK–3, K = 4, 5, … . Вывести элементы A1, A2, …, AN
n = int(input("Введите N: "))
s = 0
a1 = 1
a2 = 2
a3 = 3
print(a1); print(a2); print(a3)
for i in range(4, n+1):
    s = a3 + a2 - 2*a1
    print(s)
    a1 = a2
    a2 = a3
    a3 = s


#9
# 9. Даны целые положительные числа A и B (A < B). Вывести все целые числа от A до B включительно; при этом каждое число должно
# выводиться столько раз, каково его значение (например, число 3 выводится 3 раза).
a = int(input("Введите A: "))
b = int(input("Введите B: "))
if a < b:
    for i in range(a, b+1):
        print('')
        for k in range(0, i):
            print(i, end=" ")
else:
    print('Введены некорректные данные')


#10
# 10.Дано целое число N (> 0). Найти двойной факториал N: N!! = N·(N– 2)·(N–4)·… (последний сомножитель равен 2, если N — четное, и 1, если N — нечетное).
n = int(input("Введите N: "))
s = n
k = 2
while (n - k) > 0:
    s *= (n - k)
    k += 2
print(s)



#11
# 11.Дано число A (> 1). Вывести наибольшее из целых чисел K, для которых сумма 1 + 1/2 + … + 1/K будет меньше A, и саму эту сумму.
a = int(input("Введите A: "))
k = 1
s = 0
while (s + 1/k) < a:
    s += 1/k
    k += 1
print('k =', k-1)
print('s =', s)



#12
# 12.Дано целое число N (> 0). С помощью операций деления нацело и
# взятия остатка от деления определить, имеются ли в записи числа N
# нечетные цифры. Если имеются, то вывести True, если нет — вывести False.
n = int(input("Введите N: "))
while n > 0:
    if n % 10 % 2 != 0:
        print(True)
        break
    else:
        n = n // 10
else:
    print(False)


#13
# 13.Дано целое число N (> 1). Последовательность чисел Фибоначчи FK
# определяется следующим образом: F1 = 1, F2 = 1, FK = FK–2 + FK–1, K
# = 3, 4, … . Проверить, является ли число N числом Фибоначчи. Если является, то вывести True, если нет — вывести False.
n = int(input("Введите N: "))
tmp = 0
f1 = 1
f2 = 1
while tmp < 1000000:
    if tmp == n and tmp > 0:
        print(True)
        break
    tmp = f1 + f2
    f1 = f2
    f2 = tmp
else:
    print(False)


#14
# 14. Дано целое число N и набор из N вещественных чисел. Вывести в
# том же порядке округленные значения всех чисел из данного набора
# (как целые числа), а также сумму всех округленных значений.
n = int(input('Введите N: '))
k = 0
s = 0
print('Введите набор из n чисел')
while k < n:
    a = float(input())
    print('округленный результат: ', int(a + (0.5 if a > 0 else -0.5)))
    s += int(a + (0.5 if a > 0 else -0.5))
    k += 1
print('сумма = ', s)


#15
# 15.Дано целое число N и набор из N целых чисел. Вывести в том же
# порядке номера всех нечетных чисел из данного набора и количество K таких чисел.
n = int(input('Введите N: '))
k = 0
count = 0
print('Введите набор из n чисел')
while k < n:
    k += 1
    a = int(input())
    if a % 2 != 0:
        print('номер нечетного эл-та: ', k)
        count += 1
    else: continue
print('количество = ', count)



#16
# 16.Даны целые числа K, N и набор из N целых чисел. Если в наборе
# имеются числа, меньшие K, то вывести True; в противном случае вывести False.
k = int(input('Введите K: '))
n = int(input('Введите N: '))
count = 0
flag = False
print('Введите набор из n чисел')
while count < n:
    count += 1
    a = int(input())
    if a < k:
        flag = True
    else: continue
if flag:
    print(True)


#17
# 17.Дано целое число N и набор из N целых чисел, упорядоченный по возрастанию. Данный набор может содержать одинаковые
# элементы. Вывести в том же порядке все различные элементы данного набора.
n = int(input('Введите N: '))
count = 0
flag = 'abc'
s = ''
print('Введите набор из n чисел')
while n > 0:
    a = int(input())
    n -= 1
    if flag != a:
        s += str(a) + ' '
        flag = a
print(s)


#18
# 18.Дано целое число N и набор из N целых чисел, содержащий по крайней мере два нуля. Вывести сумму чисел из данного
# набора, расположенных между последними двумя нулями (если последние нули идут подряд, то вывести 0).
n = int(input('Введите N: '))
sum = 0
sum_final = 0
flag = 0
print('Введите набор из n чисел')
while n > 0:
    a = int(input())
    n -= 1
    if a == 0:
        flag += 1
    if flag == 1:  # начинаем суммировать все, когда натыкаемся на первый 0
        sum += a
    if flag == 2:  # как только натыкаемся на второй 0, запоминаем текущую сумму в финальную сумму
        flag = 1
        sum_final = sum
        sum = 0  # в итоге сум - временная переменная для хранения текущей суммы, а сум_файнал - для конечной
print(sum_final)  # выведется только та сумма, которая нахождится строго между двумя последними нулями.


#19
# 19.Даны целые числа K, N, а также K наборов целых чисел по N
# элементов в каждом наборе. Вывести общую сумму всех элементов, входящих в данные наборы.
k = int(input('Введите K: '))
n = int(input('Введите N: '))
sum = 0
while k > 0:
    tmp = n
    print('Введите', k, 'набор из', n, 'чисел')
    while tmp > 0:
        a = int(input())
        tmp -= 1
        sum += a
    k -= 1
print('сумма =', sum)


#20
# 20.Даны целые числа K, N, а также K наборов целых чисел по N
# элементов в каждом наборе. Для каждого набора вывести сумму его элементов.
k = int(input('Введите K: '))
n = int(input('Введите N: '))
while k > 0:
    sum = 0
    tmp = n
    print('Введите', k, 'набор из', n, 'чисел')
    while tmp > 0:
        a = int(input())
        tmp -= 1
        sum += a
    print('сумма =', sum)
    k -= 1



#21
# 21.Даны целые числа K, N, а также K наборов целых чисел по N
# элементов в каждом наборе. Для каждого набора вывести номер его
# первого элемента, равного 2, или число 0, если в данном наборе нет двоек.
k = int(input('Введите K: '))
n = int(input('Введите N: '))
while k > 0:
    flag = 0
    tmp = 0
    print('Введите', k, 'набор из', n, 'чисел')
    while tmp < n:
        a = int(input())
        tmp += 1
        if a == 2 and flag == 0:
            flag = tmp
    if flag == 0:
        print(0)
    else:
        print('первая двойка в наборе имеет номер =', flag)
    k -= 1


#22
# 22.Дано целое число N, а также K наборов ненулевых целых чисел. Признаком завершения каждого набора является число 0.
# Для каждого набора вывести количество его элементов. Вывести также общее количество элементов во всех наборах.
k = int(input('Введите K: '))
# n = int(input('Введите N: ')) # зачем нам N?
count_final = 0
while k > 0:
    count = 0
    a = 1
    print('Введите набор из чисел: ')
    while True:
        a = int(input())
        if a == 0:
            # count += 1  # считается ли 0 элементом набора?
            break
        count += 1
    print('количество элементов в наборе =', count)
    count_final += count
    k -= 1
print('\n***** общее количество элементов =', count_final, '*****')


#23
# 23.Дано целое число K, а также K наборов ненулевых целых чисел. Каждый набор содержит не менее двух элементов,
# признаком его завершения является число 0. Найти количество наборов, элементы которых возрастают.
k = int(input('Введите K: '))
count_final = 0
while k > 0:
    flag = True
    print('Введите набор чисел: ')
    a = int(input())
    tmp = a
    while True:
        a = int(input())
        if a == 0:
            break
        if a <= tmp:
            flag = False
        else:
            tmp = a
    if flag:
        count_final += 1
    k -= 1
print('\n***** количество наборов с возрастающими эл-тами =', count_final, '*****')


#24
# 24.Дано целое число K, а также K наборов ненулевых целых чисел. Каждый набор содержит не менее двух элементов,
# признаком его завершения является число 0. Для каждого набора выполнить
# следующее действие: если элементы набора возрастают, то вывести 1; если элементы набора убывают, то вывести –1;
# если элементы набора не возрастают и не убывают, то вывести 0.
k = int(input('Введите K: '))
while k > 0:
    up = 0; low = 0  # переменные для счета возрастающих чисел и убывающих
    count = 0
    print('Введите набор чисел: ')
    a = int(input())
    tmp = a
    while True:
        a = int(input())
        if a == 0:
            break
        if a > tmp:
            up += 1
        elif a < tmp:
            low += 1
        count += 1
    k -= 1
    if count == up:  # если число возрастающих чисел равно числу всех чисел, то они все возрастают
        print(1)
    elif count == low:  # если число убывающих чисел равно числу всех чисел, то они все убывают
        print(-1)
    else:  # иначе - не убывают и не возрастают все
        print(0)


#25
# 25.Дано целое число N (> 2) и набор из N вещественных чисел. Набор называется пилообразным, если каждый его
# внутренний элемент либо больше, либо меньше обоих своих соседей (то есть является «зубцом»).
# Если данный набор является пилообразным, то вывести 0;
# в противном случае вывести номер первого элемента, не являющегося зубцом.
n = int(input('Введите N: '))
flag = 0
i = 2
count = 0
print('Введите набор из', n, 'чисел: ')
a = int(input())
tmp = a
a = int(input())
if a > tmp:
    flag = True
elif a < tmp:
    flag = False
tmp = a
while i < n:
    i += 1
    a = int(input())
    if a > tmp and flag == False:
        flag = True
    elif a < tmp and flag == True:
        flag = False
    elif count == 0:
        count = i
    tmp = a
print('\n***** номер первого эл-та, не являющего зубцом =', count, '*****')



#26
# 26.Дано целое число K, а также K наборов ненулевых целых чисел. Каждый набор содержит не менее трех элементов,
# признаком его завершения является число 0. Найти количество пилообразных наборов.
k = int(input('Введите K: '))
flag = 0
count_final = 0
while k > 0:
    count = 0
    print('Введите набор чисел: ')
    a = int(input())
    tmp = a
    a = int(input())
    if a > tmp:
        flag = True
    elif a < tmp:
        flag = False
    tmp = a
    while True:
        a = int(input())
        if a == 0:
            break
        elif a > tmp and flag == False:
            flag = True
        elif a < tmp and flag == True:
            flag = False
        else:
            count +=1
        tmp = a
    k -= 1
    if count == 0:
        count_final += 1
print('\n***** количество пилообразных наоборов =', count_final, '*****')
